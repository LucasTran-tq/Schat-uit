{"version":3,"sources":["MediaDevices.ts"],"names":["NativeModules","defineCustomEventTarget","getDisplayMedia","getUserMedia","WebRTCModule","MEDIA_DEVICES_EVENTS","MediaDevices","enumerateDevices","Promise","resolve","constraints"],"mappings":"AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAmBJ,aAAzB;AAEA,MAAMK,oBAAoB,GAAG,CAAC,cAAD,CAA7B;;AAEA,MAAMC,YAAN,SAA2BL,uBAAuB,CAAC,GAAGI,oBAAJ,CAAlD,CAA4E;AACxE;AACJ;AACA;AACA;AACIE,EAAAA,gBAAgB,GAAG;AACf,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIL,YAAY,CAACG,gBAAb,CAA8BE,OAA9B,CAAvB,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIP,EAAAA,eAAe,GAAG;AACd,WAAOA,eAAe,EAAtB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,YAAY,CAACO,WAAD,EAAc;AACtB,WAAOP,YAAY,CAACO,WAAD,CAAnB;AACH;;AA7BuE;;AAgC5E,eAAe,IAAIJ,YAAJ,EAAf","sourcesContent":["\nimport { NativeModules } from 'react-native';\nimport { defineCustomEventTarget } from 'event-target-shim';\n\nimport getDisplayMedia from './getDisplayMedia';\nimport getUserMedia from './getUserMedia';\n\nconst { WebRTCModule } = NativeModules;\n\nconst MEDIA_DEVICES_EVENTS = ['devicechange'];\n\nclass MediaDevices extends defineCustomEventTarget(...MEDIA_DEVICES_EVENTS) {\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code enumerateDevices}\n     * implementation.\n     */\n    enumerateDevices() {\n        return new Promise(resolve => WebRTCModule.enumerateDevices(resolve));\n    }\n\n    /**\n     * W3C \"Screen Capture\" compatible {@code getDisplayMedia} implementation.\n     * See: https://w3c.github.io/mediacapture-screen-share/\n     *\n     * @returns {Promise}\n     */\n    getDisplayMedia() {\n        return getDisplayMedia();\n    }\n\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code getUserMedia}\n     * implementation.\n     * See: https://www.w3.org/TR/mediacapture-streams/#dom-mediadevices-enumeratedevices\n     *\n     * @param {*} constraints\n     * @returns {Promise}\n     */\n    getUserMedia(constraints) {\n        return getUserMedia(constraints);\n    }\n}\n\nexport default new MediaDevices();\n"]}