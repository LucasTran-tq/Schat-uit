"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
class Country {
    constructor() {
        this.countryCodes = [];
        this.countriesData = null;
    }
    setCustomCountriesData(json) {
        this.countriesData = json;
    }
    addCountryCode(iso2, dialCode, priority) {
        if (!(dialCode in this.countryCodes)) {
            this.countryCodes[dialCode] = [];
        }
        const index = priority || 0;
        this.countryCodes[dialCode][index] = iso2;
    }
    getAll() {
        if (!this.countries) {
            this.countries = lodash_1.orderBy(this.countriesData || require('./resources/countries.json'), // eslint-disable-line global-require
            ['name'], ['asc']);
        }
        return this.countries;
    }
    getCountryCodes() {
        if (!this.countryCodes.length) {
            this.getAll().forEach((country) => {
                this.addCountryCode(country.iso2, country.dialCode, country.priority);
                if (country.areaCodes) {
                    country.areaCodes.forEach((areaCode) => {
                        this.addCountryCode(country.iso2, country.dialCode + areaCode);
                    });
                }
            });
        }
        return this.countryCodes;
    }
    getCountryDataByCode(iso2) {
        return lodash_1.find(this.getAll(), (country) => country.iso2 === iso2);
    }
}
exports.default = new Country();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb3VudHJ5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUF1QztBQUV2QyxNQUFNLE9BQU87SUFPVDtRQUNJLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBRXZCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxzQkFBc0IsQ0FBQyxJQUFJO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQWdCLEVBQUUsUUFBUztRQUM1QyxJQUFJLENBQUMsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ3BDO1FBRUQsTUFBTSxLQUFLLEdBQUcsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQztJQUM5QyxDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQU8sQ0FDcEIsSUFBSSxDQUFDLGFBQWEsSUFBSSxPQUFPLENBQUMsNEJBQTRCLENBQUMsRUFBRSxxQ0FBcUM7WUFDbEcsQ0FBQyxNQUFNLENBQUMsRUFDUixDQUFDLEtBQUssQ0FBQyxDQUNWLENBQUM7U0FDTDtRQUVELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRUQsZUFBZTtRQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRTtZQUMzQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQzlCLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDdEUsSUFBSSxPQUFPLENBQUMsU0FBUyxFQUFFO29CQUNuQixPQUFPLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO3dCQUNuQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQztvQkFDbkUsQ0FBQyxDQUFDLENBQUM7aUJBQ047WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxJQUFJO1FBQ3JCLE9BQU8sYUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQztJQUNuRSxDQUFDO0NBQ0o7QUFFRCxrQkFBZSxJQUFJLE9BQU8sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmluZCwgb3JkZXJCeSB9IGZyb20gJ2xvZGFzaCc7XG5cbmNsYXNzIENvdW50cnkge1xuICAgIHByaXZhdGUgY291bnRyeUNvZGVzOiBhbnlbXTtcblxuICAgIHByaXZhdGUgY291bnRyaWVzRGF0YTogYW55O1xuXG4gICAgcHJpdmF0ZSBjb3VudHJpZXM6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNvdW50cnlDb2RlcyA9IFtdO1xuXG4gICAgICAgIHRoaXMuY291bnRyaWVzRGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgc2V0Q3VzdG9tQ291bnRyaWVzRGF0YShqc29uKSB7XG4gICAgICAgIHRoaXMuY291bnRyaWVzRGF0YSA9IGpzb247XG4gICAgfVxuXG4gICAgYWRkQ291bnRyeUNvZGUoaXNvMiwgZGlhbENvZGU6IHN0cmluZywgcHJpb3JpdHk/KSB7XG4gICAgICAgIGlmICghKGRpYWxDb2RlIGluIHRoaXMuY291bnRyeUNvZGVzKSkge1xuICAgICAgICAgICAgdGhpcy5jb3VudHJ5Q29kZXNbZGlhbENvZGVdID0gW107XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpbmRleCA9IHByaW9yaXR5IHx8IDA7XG4gICAgICAgIHRoaXMuY291bnRyeUNvZGVzW2RpYWxDb2RlXVtpbmRleF0gPSBpc28yO1xuICAgIH1cblxuICAgIGdldEFsbCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvdW50cmllcykge1xuICAgICAgICAgICAgdGhpcy5jb3VudHJpZXMgPSBvcmRlckJ5KFxuICAgICAgICAgICAgICAgIHRoaXMuY291bnRyaWVzRGF0YSB8fCByZXF1aXJlKCcuL3Jlc291cmNlcy9jb3VudHJpZXMuanNvbicpLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGdsb2JhbC1yZXF1aXJlXG4gICAgICAgICAgICAgICAgWyduYW1lJ10sXG4gICAgICAgICAgICAgICAgWydhc2MnXSxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5jb3VudHJpZXM7XG4gICAgfVxuXG4gICAgZ2V0Q291bnRyeUNvZGVzKCkge1xuICAgICAgICBpZiAoIXRoaXMuY291bnRyeUNvZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChjb3VudHJ5KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRDb3VudHJ5Q29kZShjb3VudHJ5LmlzbzIsIGNvdW50cnkuZGlhbENvZGUsIGNvdW50cnkucHJpb3JpdHkpO1xuICAgICAgICAgICAgICAgIGlmIChjb3VudHJ5LmFyZWFDb2Rlcykge1xuICAgICAgICAgICAgICAgICAgICBjb3VudHJ5LmFyZWFDb2Rlcy5mb3JFYWNoKChhcmVhQ29kZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRDb3VudHJ5Q29kZShjb3VudHJ5LmlzbzIsIGNvdW50cnkuZGlhbENvZGUgKyBhcmVhQ29kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvdW50cnlDb2RlcztcbiAgICB9XG5cbiAgICBnZXRDb3VudHJ5RGF0YUJ5Q29kZShpc28yKSB7XG4gICAgICAgIHJldHVybiBmaW5kKHRoaXMuZ2V0QWxsKCksIChjb3VudHJ5KSA9PiBjb3VudHJ5LmlzbzIgPT09IGlzbzIpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IENvdW50cnkoKTtcbiJdfQ==